{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "api-operations.schema.json",
  "version": "3.0.0",
  "title": "API Operations v3.0",
  "description": "API operations with DDD patterns and contract testing",
  "type": "object",
  "properties": {
    "apiOperations": {
      "$ref": "#/$defs/ApiOperationsDefinition"
    }
  },
  "required": ["apiOperations"],
  "$defs": {
    "ApiOperationsDefinition": {
      "type": "object",
      "description": "Complete API operations definition",
      "properties": {
        "metadata": {
          "$ref": "#/$defs/OperationsMetadata"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/OperationDefinition"
          },
          "minItems": 1
        },
        "commonComponents": {
          "$ref": "#/$defs/CommonComponents"
        },
        "contractTesting": {
          "$ref": "#/$defs/ContractTestingConfig"
        },
        "performanceRequirements": {
          "$ref": "#/$defs/PerformanceRequirements"
        }
      },
      "required": ["metadata", "operations"],
      "additionalProperties": false
    },
    "OperationsMetadata": {
      "type": "object",
      "description": "Metadata for operations collection",
      "properties": {
        "apiId": {
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$"
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "boundedContext": {
          "type": "string"
        },
        "aggregate": {
          "type": "string"
        },
        "totalOperations": {
          "type": "integer",
          "minimum": 0
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": ["apiId", "version", "boundedContext"],
      "additionalProperties": false
    },
    "OperationDefinition": {
      "type": "object",
      "description": "Complete operation definition with DDD integration",
      "properties": {
        "operationId": {
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$"
        },
        "path": {
          "type": "string",
          "pattern": "^/.*"
        },
        "method": {
          "type": "string",
          "enum": ["GET", "POST", "PUT", "DELETE", "PATCH", "HEAD", "OPTIONS"]
        },
        "summary": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "maxLength": 1000
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/ParameterDefinition"
          }
        },
        "requestBody": {
          "$ref": "#/$defs/RequestBodyDefinition"
        },
        "responses": {
          "type": "object",
          "patternProperties": {
            "^[1-5][0-9][0-9]$|^default$": {
              "$ref": "#/$defs/ResponseDefinition"
            }
          },
          "minProperties": 1
        },
        "security": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "domainIntegration": {
          "$ref": "#/$defs/DomainIntegration"
        },
        "businessLogic": {
          "$ref": "#/$defs/BusinessLogic"
        },
        "performanceProfile": {
          "$ref": "#/$defs/PerformanceProfile"
        },
        "contractDefinition": {
          "$ref": "#/$defs/ContractDefinition"
        }
      },
      "required": ["operationId", "path", "method", "summary", "responses", "domainIntegration"],
      "additionalProperties": false
    },
    "ParameterDefinition": {
      "type": "object",
      "description": "Parameter definition with validation",
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$"
        },
        "in": {
          "type": "string",
          "enum": ["query", "header", "path", "cookie"]
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "maxLength": 500
        },
        "required": {
          "type": "boolean",
          "default": false
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "schema": {
          "$ref": "#/$defs/SchemaDefinition"
        },
        "example": {
          "description": "Example value"
        },
        "examples": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/ExampleDefinition"
          }
        },
        "domainMapping": {
          "$ref": "#/$defs/ParameterDomainMapping"
        }
      },
      "required": ["name", "in", "schema"],
      "additionalProperties": false
    },
    "ParameterDomainMapping": {
      "type": "object",
      "description": "Domain mapping for parameter",
      "properties": {
        "domainType": {
          "type": "string",
          "enum": ["entity_id", "value_object", "primitive", "aggregate_id"]
        },
        "businessRule": {
          "type": "string"
        },
        "validation": {
          "type": "object",
          "properties": {
            "businessRules": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "domainInvariants": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    "RequestBodyDefinition": {
      "type": "object",
      "description": "Request body definition with domain context",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 1,
          "maxLength": 500
        },
        "required": {
          "type": "boolean",
          "default": false
        },
        "content": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9][a-zA-Z0-9!#$&\\-\\^_]*\\/[a-zA-Z0-9][a-zA-Z0-9!#$&\\-\\^_.]*$": {
              "$ref": "#/$defs/MediaTypeDefinition"
            }
          },
          "minProperties": 1
        },
        "domainMapping": {
          "$ref": "#/$defs/RequestDomainMapping"
        }
      },
      "required": ["content"],
      "additionalProperties": false
    },
    "RequestDomainMapping": {
      "type": "object",
      "description": "Domain mapping for request body",
      "properties": {
        "commandType": {
          "type": "string",
          "pattern": "^[A-Z][a-zA-Z0-9]*Command$"
        },
        "aggregate": {
          "type": "string"
        },
        "entity": {
          "type": "string"
        },
        "valueObjects": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "businessRules": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domainEvents": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "ResponseDefinition": {
      "type": "object",
      "description": "Response definition with domain context",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 1,
          "maxLength": 500
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/HeaderDefinition"
          }
        },
        "content": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9][a-zA-Z0-9!#$&\\-\\^_]*\\/[a-zA-Z0-9][a-zA-Z0-9!#$&\\-\\^_.]*$": {
              "$ref": "#/$defs/MediaTypeDefinition"
            }
          }
        },
        "domainMapping": {
          "$ref": "#/$defs/ResponseDomainMapping"
        }
      },
      "required": ["description"],
      "additionalProperties": false
    },
    "ResponseDomainMapping": {
      "type": "object",
      "description": "Domain mapping for response",
      "properties": {
        "queryResultType": {
          "type": "string"
        },
        "entityProjection": {
          "type": "string"
        },
        "valueObjects": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domainEvents": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "businessRuleResults": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "ruleId": {
                "type": "string"
              },
              "result": {
                "type": "string",
                "enum": ["satisfied", "violated", "warning"]
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    "MediaTypeDefinition": {
      "type": "object",
      "description": "Media type definition with schema",
      "properties": {
        "schema": {
          "$ref": "#/$defs/SchemaDefinition"
        },
        "example": {
          "description": "Example value"
        },
        "examples": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/ExampleDefinition"
          }
        },
        "encoding": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/EncodingDefinition"
          }
        }
      },
      "additionalProperties": false
    },
    "SchemaDefinition": {
      "type": "object",
      "description": "Schema definition with DDD extensions",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["null", "boolean", "object", "array", "number", "string", "integer"]
        },
        "format": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/SchemaDefinition"
          }
        },
        "items": {
          "$ref": "#/$defs/SchemaDefinition"
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "enum": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true
        },
        "const": {
          "description": "Constant value"
        },
        "default": {
          "description": "Default value"
        },
        "example": {
          "description": "Example value"
        },
        "examples": {
          "type": "array",
          "items": {
            "description": "Example values"
          }
        },
        "pattern": {
          "type": "string",
          "format": "regex"
        },
        "minimum": {
          "type": "number"
        },
        "maximum": {
          "type": "number"
        },
        "exclusiveMinimum": {
          "type": "number"
        },
        "exclusiveMaximum": {
          "type": "number"
        },
        "multipleOf": {
          "type": "number",
          "exclusiveMinimum": 0
        },
        "minLength": {
          "type": "integer",
          "minimum": 0
        },
        "maxLength": {
          "type": "integer",
          "minimum": 0
        },
        "minItems": {
          "type": "integer",
          "minimum": 0
        },
        "maxItems": {
          "type": "integer",
          "minimum": 0
        },
        "uniqueItems": {
          "type": "boolean",
          "default": false
        },
        "minProperties": {
          "type": "integer",
          "minimum": 0
        },
        "maxProperties": {
          "type": "integer",
          "minimum": 0
        },
        "additionalProperties": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/SchemaDefinition"
            }
          ]
        },
        "allOf": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/SchemaDefinition"
          },
          "minItems": 1
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/SchemaDefinition"
          },
          "minItems": 1
        },
        "anyOf": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/SchemaDefinition"
          },
          "minItems": 1
        },
        "not": {
          "$ref": "#/$defs/SchemaDefinition"
        },
        "$ref": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean",
          "default": false
        },
        "writeOnly": {
          "type": "boolean",
          "default": false
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "domainType": {
          "type": "string",
          "enum": [
            "entity",
            "value_object",
            "aggregate_id",
            "domain_event",
            "command",
            "query_result",
            "specification",
            "policy",
            "invariant"
          ]
        },
        "businessRules": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domainInvariants": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "HeaderDefinition": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "required": {
          "type": "boolean",
          "default": false
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "schema": {
          "$ref": "#/$defs/SchemaDefinition"
        },
        "example": {
          "description": "Example value"
        }
      },
      "additionalProperties": false
    },
    "ExampleDefinition": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "value": {
          "description": "Example value"
        },
        "externalValue": {
          "type": "string",
          "format": "uri"
        }
      },
      "additionalProperties": false
    },
    "EncodingDefinition": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/HeaderDefinition"
          }
        },
        "style": {
          "type": "string",
          "enum": ["form", "spaceDelimited", "pipeDelimited", "deepObject"]
        },
        "explode": {
          "type": "boolean"
        },
        "allowReserved": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    },
    "DomainIntegration": {
      "type": "object",
      "description": "Integration with DDD domain concepts",
      "properties": {
        "aggregate": {
          "type": "string",
          "description": "Target aggregate"
        },
        "entity": {
          "type": "string",
          "description": "Target entity"
        },
        "domainService": {
          "type": "string",
          "description": "Domain service handling this operation"
        },
        "applicationService": {
          "type": "string",
          "description": "Application service coordinating this operation"
        },
        "command": {
          "type": "string",
          "pattern": "^[A-Z][a-zA-Z0-9]*Command$",
          "description": "Command pattern implementation"
        },
        "query": {
          "type": "string",
          "pattern": "^[A-Z][a-zA-Z0-9]*Query$",
          "description": "Query pattern implementation"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Domain events triggered by this operation"
        },
        "businessRules": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Business rules applied in this operation"
        },
        "repositoryMethods": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Repository methods used"
        },
        "domainEventHandlers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Event handlers triggered"
        }
      },
      "required": ["aggregate"],
      "additionalProperties": false
    },
    "BusinessLogic": {
      "type": "object",
      "description": "Business logic definition for operation",
      "properties": {
        "businessRules": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/BusinessRuleApplication"
          }
        },
        "validations": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/ValidationRule"
          }
        },
        "calculations": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/CalculationRule"
          }
        },
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/PolicyApplication"
          }
        },
        "invariants": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/InvariantCheck"
          }
        }
      },
      "additionalProperties": false
    },
    "BusinessRuleApplication": {
      "type": "object",
      "properties": {
        "ruleId": {
          "type": "string",
          "pattern": "^BR_[A-Z][A-Z0-9_]*$"
        },
        "phase": {
          "type": "string",
          "enum": ["pre_validation", "validation", "execution", "post_execution"]
        },
        "enforcement": {
          "type": "string",
          "enum": ["mandatory", "advisory", "logging"]
        },
        "errorHandling": {
          "type": "object",
          "properties": {
            "onViolation": {
              "type": "string",
              "enum": ["abort", "warn", "log", "compensate"]
            },
            "errorCode": {
              "type": "string"
            },
            "errorMessage": {
              "type": "string"
            }
          }
        }
      },
      "required": ["ruleId", "phase"],
      "additionalProperties": false
    },
    "ValidationRule": {
      "type": "object",
      "properties": {
        "ruleId": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["format", "range", "pattern", "custom", "business"]
        },
        "constraint": {
          "type": "object"
        },
        "message": {
          "type": "string"
        }
      },
      "required": ["ruleId", "type"],
      "additionalProperties": false
    },
    "CalculationRule": {
      "type": "object",
      "properties": {
        "ruleId": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "formula": {
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["ruleId", "field", "formula"],
      "additionalProperties": false
    },
    "PolicyApplication": {
      "type": "object",
      "properties": {
        "policyId": {
          "type": "string"
        },
        "context": {
          "type": "object"
        },
        "decision": {
          "type": "string",
          "enum": ["allow", "deny", "conditional"]
        }
      },
      "required": ["policyId"],
      "additionalProperties": false
    },
    "InvariantCheck": {
      "type": "object",
      "properties": {
        "invariantId": {
          "type": "string"
        },
        "scope": {
          "type": "string",
          "enum": ["aggregate", "entity", "value_object", "global"]
        },
        "condition": {
          "type": "string"
        },
        "enforcement": {
          "type": "string",
          "enum": ["strict", "advisory"]
        }
      },
      "required": ["invariantId", "condition"],
      "additionalProperties": false
    },
    "PerformanceProfile": {
      "type": "object",
      "description": "Performance characteristics for operation",
      "properties": {
        "expectedResponseTime": {
          "type": "object",
          "properties": {
            "p50": {
              "type": "number"
            },
            "p95": {
              "type": "number"
            },
            "p99": {
              "type": "number"
            }
          }
        },
        "throughputRequirement": {
          "type": "number",
          "description": "Requests per second"
        },
        "concurrencyProfile": {
          "type": "object",
          "properties": {
            "maxConcurrentRequests": {
              "type": "integer"
            },
            "averageConcurrency": {
              "type": "integer"
            }
          }
        },
        "resourceUsage": {
          "type": "object",
          "properties": {
            "memoryFootprint": {
              "type": "string"
            },
            "cpuIntensive": {
              "type": "boolean"
            },
            "ioIntensive": {
              "type": "boolean"
            }
          }
        },
        "cachingStrategy": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "ttl": {
              "type": "integer"
            },
            "keys": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    "ContractDefinition": {
      "type": "object",
      "description": "Contract testing definition for operation",
      "properties": {
        "consumerContracts": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/ConsumerContract"
          }
        },
        "providerStates": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/ProviderState"
          }
        },
        "mockScenarios": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/MockScenario"
          }
        }
      },
      "additionalProperties": false
    },
    "ConsumerContract": {
      "type": "object",
      "properties": {
        "consumer": {
          "type": "string"
        },
        "scenario": {
          "type": "string"
        },
        "given": {
          "type": "string"
        },
        "when": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string"
            },
            "path": {
              "type": "string"
            },
            "headers": {
              "type": "object"
            },
            "body": {
              "type": "object"
            }
          }
        },
        "then": {
          "type": "object",
          "properties": {
            "status": {
              "type": "integer"
            },
            "headers": {
              "type": "object"
            },
            "body": {
              "type": "object"
            }
          }
        }
      },
      "required": ["consumer", "scenario", "when", "then"],
      "additionalProperties": false
    },
    "ProviderState": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "setupMethod": {
          "type": "string"
        },
        "teardownMethod": {
          "type": "string"
        },
        "dataSetup": {
          "type": "object"
        }
      },
      "required": ["state"],
      "additionalProperties": false
    },
    "MockScenario": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "request": {
          "type": "object"
        },
        "response": {
          "type": "object"
        },
        "delay": {
          "type": "integer"
        },
        "probability": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        }
      },
      "required": ["name", "request", "response"],
      "additionalProperties": false
    },
    "CommonComponents": {
      "type": "object",
      "description": "Common components shared across operations",
      "properties": {
        "schemas": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/SchemaDefinition"
          }
        },
        "responses": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/ResponseDefinition"
          }
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/ParameterDefinition"
          }
        },
        "examples": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/ExampleDefinition"
          }
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/HeaderDefinition"
          }
        }
      },
      "additionalProperties": false
    },
    "ContractTestingConfig": {
      "type": "object",
      "description": "Contract testing configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "framework": {
          "type": "string",
          "enum": ["pact", "spring_cloud_contract", "postman", "custom"]
        },
        "providerVerification": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "testSuite": {
              "type": "string"
            }
          }
        },
        "consumerDrivenContracts": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "contractsPath": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    "PerformanceRequirements": {
      "type": "object",
      "description": "Overall performance requirements",
      "properties": {
        "sla": {
          "type": "object",
          "properties": {
            "availability": {
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "responseTime": {
              "type": "object",
              "properties": {
                "p50": {
                  "type": "number"
                },
                "p95": {
                  "type": "number"
                },
                "p99": {
                  "type": "number"
                }
              }
            },
            "throughput": {
              "type": "number"
            },
            "errorRate": {
              "type": "number",
              "minimum": 0,
              "maximum": 100
            }
          }
        },
        "loadTesting": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "scenarios": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "virtualUsers": {
                    "type": "integer"
                  },
                  "duration": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "additionalProperties": false
    }
  }
}
