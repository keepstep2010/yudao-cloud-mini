{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://example.com/ddd-metamodel/1.0/screen-definition.schema.json",
  "title": "屏幕定义 - 迁移指南",
  "description": "此文件已被弃用，请使用新的分层架构模式。新模式提供更好的性能、可维护性和模块化设计。",
  "version": "1.0.0-deprecated",
  "deprecated": true,
  "type": "object",
  "properties": {
    "migrationGuide": {
      "type": "object",
      "properties": {
        "newSchemaLocation": {
          "type": "string",
          "const": "object-jsonschemas/screen-definition.schemas/",
          "description": "新的模式文件位置"
        },
        "benefits": {
          "type": "array",
          "items": { "type": "string" },
          "default": [
            "95%+ 减少 PATCH 操作的数据传输量",
            "模块化的组件和字段定义，便于重用",
            "专门的操作模式支持增量更新",
            "更好的性能和缓存友好性",
            "清晰的关注点分离",
            "支持复杂UI组件的分层管理"
          ]
        },
        "migrationSteps": {
          "type": "object",
          "properties": {
            "step1": {
              "type": "string",
              "default": "使用 object-jsonschemas/screen-definition.schemas/fields/ 下的字段定义替换直接字段定义"
            },
            "step2": {
              "type": "string", 
              "default": "将完整屏幕定义迁移到 object-jsonschemas/screen-definition.schemas/full/screen-definition.schema.json"
            },
            "step3": {
              "type": "string",
              "default": "使用 object-jsonschemas/screen-definition.schemas/operations/patch/ 下的补丁模式进行增量更新"
            },
            "step4": {
              "type": "string",
              "default": "利用 object-jsonschemas/screen-definition.schemas/operations/bulk/ 进行批量操作"
            }
          }
        },
        "newSchemaFiles": {
          "type": "object",
          "properties": {
            "fieldDefinitions": {
              "type": "array",
              "items": { "type": "string" },
              "default": [
                "fields/common-fields.schema.json - 通用字段定义",
                "fields/screen-fields.schema.json - 屏幕特定字段",
                "fields/component-fields.schema.json - 组件字段定义",
                "fields/layout-fields.schema.json - 布局相关字段"
              ]
            },
            "fullSchemas": {
              "type": "array", 
              "items": { "type": "string" },
              "default": [
                "full/screen.schema.json - 基础屏幕定义",
                "full/screen-definition.schema.json - 完整屏幕定义",
                "full/component.schema.json - UI组件完整定义",
                "full/action.schema.json - 屏幕操作完整定义",
                "full/permission.schema.json - 屏幕权限完整定义"
              ]
            },
            "operations": {
              "type": "array",
              "items": { "type": "string" },
              "default": [
                "operations/patch/screen-patch.schema.json - 屏幕增量更新",
                "operations/patch/component-patch.schema.json - 组件增量更新", 
                "operations/patch/action-patch.schema.json - 操作增量更新",
                "operations/bulk/screen-definition-bulk-operations.schema.json - 批量操作"
              ]
            }
          }
        },
        "usageExamples": {
          "type": "object",
          "properties": {
            "fullScreenDefinition": {
              "type": "string",
              "default": "使用 full/screen-definition.schema.json 定义完整的屏幕结构，包含所有组件、操作和权限"
            },
            "incrementalUpdate": {
              "type": "string", 
              "default": "使用 operations/patch/screen-patch.schema.json 进行部分更新，只传输变更的字段"
            },
            "componentManagement": {
              "type": "string",
              "default": "使用 full/component.schema.json 管理复杂的UI组件，支持嵌套和继承"
            },
            "batchOperations": {
              "type": "string",
              "default": "使用 operations/bulk/ 模式一次性处理多个屏幕的创建、更新或删除"
            }
          }
        }
      },
      "required": ["newSchemaLocation", "benefits", "migrationSteps"]
    }
  },
  "required": ["migrationGuide"],
  "additionalProperties": false
}
